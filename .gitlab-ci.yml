### vim: tabstop=2 shiftwidth=2 softtabstop=2 smarttab expandtab autoindent
###
### E257.FI: tackler
### https://gitlab.com/e257/accounting/tackler
###

# hseeberger images have ready-to-go sbt and scala at user's home, 
# but that location and especially ~/.ivy2 is not cache-able by GitLab:
# https://gitlab.com/gitlab-org/gitlab-runner/issues/327
before_script:
  - mkdir -p sbt-cache
  - "[ -d sbt-cache/sbt ] || cp -a $HOME/.sbt/  sbt-cache/sbt/"
  - "[ -d sbt-cache/ivy ] || cp -a $HOME/.ivy2/ sbt-cache/ivy/"

cache:
  key: "$CI_BUILD_REF_NAME"
  untracked: true
  paths:
    - "sbt-cache/sbt/1.0"
    - "sbt-cache/sbt/boot"
    - "sbt-cache/ivy/cache"

variables:
  SBT_OPTS: "-Dsbt.log.noformat=true -Dsbt.global.base=sbt-cache/sbt/1.0 -Dsbt.boot.directory=sbt-cache/sbt/boot -Dsbt.ivy.home=sbt-cache/ivy"


test·jdk11:
  # Avoid permission problems between root vs. sbtuser 
  # Once jdk8 and jdk11 images have same user, then these can be combined
  cache:
    key: "$CI_BUILD_REF_NAME-jdk11"
    untracked: true
    paths:
      - "sbt-cache/sbt/1.0"
      - "sbt-cache/sbt/boot"
      - "sbt-cache/ivy/cache"

  image: "hseeberger/scala-sbt:11.0.2_2.12.8_1.2.8"

  stage: "test"

  script:
    - sbt "+clean" "+test" "+it:test" "+cli/assembly"


test·jdk8:
  image: "hseeberger/scala-sbt:8u212_2.12.8_1.2.8"

  stage: "test"

  script:
    - sbt "+clean" "+test" "+it:test" "+cli/assembly"


codecov:
  image: "hseeberger/scala-sbt:8u212_2.12.8_1.2.8"

  stage: "test"

  script:
    - sbt "+clean" coverage "++2.12.8! test" "++2.12.8! it:test"
    - sbt "++2.12.8! coverageAggregate"

  coverage: '/All done. Coverage was \[\d+.\d+%\]/'

